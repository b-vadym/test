version: "3.7"
services:
  php:
    build:
      args:
        uid: 1000
      context: ./
      dockerfile: docker/php/Dockerfile
    restart: unless-stopped
    working_dir: /var/www/
    environment:
      PHP_IDE_CONFIG: serverName=Docker
      TERM: xterm-256color
    volumes:
      - ./:/var/www
      - ./docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
      - ./var/composer/:/home/app/.composer/
      - ./docker/php/bin/:/home/app/bin/
      - ./docker/php/.bashrc:/home/app/.bashrc
      - ./var/hist-php/:/home/app/bash/
      - ./var/hist-php/:/home/app/zsh/
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "test-minio.vadim.visual:host-gateway"
    depends_on:
      - db
      - redis
      - mailhog
      - minio

  db:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: test
      MYSQL_ROOT_PASSWORD: test
      MYSQL_PASSWORD: test
      MYSQL_USER: test

  nginx:
    image: nginx:1.21
    restart: unless-stopped
    ports:
      - "59001:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx:/etc/nginx/conf.d
    depends_on:
      - php

  adminer:
    image: adminer
    ports:
      - '59002:8080'
    restart: unless-stopped
    depends_on:
      - db

  node:
    build:
      args:
        uid: 1000
      context: ./
      dockerfile: docker/node/Dockerfile
    environment:
      TERM: xterm-256color
    volumes:
      - ./:/var/www
      - ./var/yarn/:/home/node/.cache/yarn/
      - ./docker/node/.bashrc:/home/node/.bashrc
      - ./var/hist-node/:/home/node/bash/
      - ./var/hist-node/:/home/node/zsh/

  redis:
    image: "redis:6.2"
    command: "redis-server --appendonly yes"
    restart: unless-stopped

  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    links:
      - redis
    environment:
      - REDIS_HOSTS=redis:redis:6379
    ports:
      - "59003:8081"
    depends_on:
      - redis

  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - 59004:8025 # web ui

  minio:
    image: minio/minio:RELEASE.2021-10-02T16-31-05Z
    user: 1000:1000
    ports:
      - "59005:9000" # api
      - "59006:9001" # ui
    volumes:
      - ./var/minio:/data
    environment:
      MINIO_ROOT_USER: minio_access_key
      MINIO_ROOT_PASSWORD: minio_secret_key
    command: server  --console-address ":9001" /data

  create-buckets:
    image: minio/mc:RELEASE.2021-09-23T05-44-03Z
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
        /usr/bin/mc alias set test-minio http://minio:9000 minio_access_key minio_secret_key;
        /usr/bin/mc mb test-minio/public --region storage1;
        /usr/bin/mc policy set download test-minio/public;
        /usr/bin/mc mb test-minio/public-test --region storage1;
        /usr/bin/mc policy set download test-minio/public-test;
        exit 0;
      "

  mercure:
    image: dunglas/mercure
    restart: unless-stopped
    environment:
      # Uncomment the following line to disable HTTPS
      SERVER_NAME: ':80'
      MERCURE_PUBLISHER_JWT_KEY: '!ChangeMe!'
      MERCURE_SUBSCRIBER_JWT_KEY: '!ChangeMe!'
    # Uncomment the following line to enable the development mode(disable cors)
    command: /usr/bin/caddy run -config /etc/caddy/Caddyfile.dev
    ports:
      - "59007:80"
      - "59008:443"
